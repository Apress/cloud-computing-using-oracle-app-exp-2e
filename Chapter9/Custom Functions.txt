/*This function should be wrapped, as the hash algorhythm is exposed here. See my blog post Protecting Your Code with Oracle’s Wrap Utility
http://oracleapex5.blogspot.com/2015/05/protecting-your-code-with-oracles-wrap.html*/

-- CUSTOM HASH FUNCTION
create or replace function custom_hash (p_userName in varchar2, p_password in varchar2) return varchar2 is
   l_password varchar2(4000);
   l_salt varchar2(4000) := 'XV1MH24EC1IHDCQHSS6XQ6QTJSANT3';
begin
   l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5(input_string => p_password || substr(l_salt,10,13) ||
p_userName || substr(l_salt, 4,10)));
   return l_password;
end;



/*
The function receives username and password on line # 1 as parameters from the login form and compares this information with the values stored in the GL_USERS table after applying the CUSTOM_HASH function. If the provided information matches with the table values, the user is authenticated and is allowed to access the application.
*/

-- CUSTOM AUTH FUNCTION
create or replace function custom_auth (p_userName in VARCHAR2, p_password in VARCHAR2) return BOOLEAN is
   l_password varchar2(4000);
   l_stored_password varchar2(4000);
   l_count number;
begin
   select count(*) into l_count from gl_users where userID = p_userName;
   if l_count > 0 then
      select password into l_stored_password from gl_users where userID = p_userName;
      l_password := custom_hash(p_userName, p_password);
      if l_password = l_stored_password then
         return true;
      else
         return false;
      end if;
   else
      return false;
   end if;
end;
